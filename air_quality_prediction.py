# -*- coding: utf-8 -*-
"""Air quality prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/136lTPJqd_22xJLGzfyreBk2CogiPw-NG
"""

# Step 1: Install necessary packages
!pip install pandas numpy scikit-learn matplotlib seaborn

# Step 2: Import required libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# Step 3: Upload your dataset (CSV file)
from google.colab import files
uploaded = files.upload()

# After uploading, load your dataset
data = pd.read_csv(next(iter(uploaded)))

# Display the first few rows of the dataset
print("Dataset Preview:")
print(data.head())

# Step 4: Check for missing values
print("\nMissing Values:")
print(data.isnull().sum())

# Step 5: Drop rows with missing values
data = data.dropna()

# Step 6: Define features (X) and target (y)
X = data[['PM2.5', 'PM10', 'NO2', 'CO', 'SO2', 'O3']]  # Features
y = data['AQI']  # Target variable

# Step 7: Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 8: Train the Random Forest model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 9: Make predictions
y_pred = model.predict(X_test)

# Step 10: Evaluate the model
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"\nModel Evaluation:")
print(f"Mean Absolute Error: {mae:.2f}")
print(f"R2 Score: {r2:.2f}")

# Step 11: Plot Actual vs Predicted AQI
plt.figure(figsize=(8, 5))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual AQI")
plt.ylabel("Predicted AQI")
plt.title("Actual vs Predicted AQI")
plt.grid(True)
plt.show()